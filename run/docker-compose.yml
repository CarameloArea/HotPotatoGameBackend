version: '3.9'
services:
  postgres:
    image: postgres:17
    container_name: postgres_hot_potato_game
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hot_potato_game_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  hot_potato_game_app:
    build: ..
    image: hot_potato_game:dev
    container_name: hot_potato_game_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      APPLICATION_SECURITY_JWT_SECRETKEY: ${APPLICATION_SECURITY_JWT_SECRETKEY}
      APPLICATION_SECURITY_JWT_EXPIRATION: ${APPLICATION_SECURITY_JWT_EXPIRATION}
    ports:
      - "9901:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hot_potato_game_network
volumes:
  postgres_data:

networks:
  hot_potato_game_network: